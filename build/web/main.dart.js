// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const dropdown = flutter_sdk.src__material__dropdown;
  const text_field = flutter_sdk.src__material__text_field;
  const text_input = flutter_sdk.src__services__text_input;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    DropdownButtonFormFieldOfString: () => (T.DropdownButtonFormFieldOfString = dart.constFn(dropdown.DropdownButtonFormField$(core.String)))(),
    DropdownMenuItemOfString: () => (T.DropdownMenuItemOfString = dart.constFn(dropdown.DropdownMenuItem$(core.String)))(),
    StringToDropdownMenuItemOfString: () => (T.StringToDropdownMenuItemOfString = dart.constFn(dart.fnType(T.DropdownMenuItemOfString(), [core.String])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNTovoid: () => (T.StringNTovoid = dart.constFn(dart.fnType(dart.void, [T.StringN()])))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    }
  }, false);
  var C = [void 0];
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.UnitConverterApp = class UnitConverterApp extends framework.StatelessWidget {
    build(context) {
      return new app.MaterialApp.new({title: "Converto", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.blue}), home: new main.UnitConverterHomePage.new()});
    }
    static ['_#new#tearOff']() {
      return new main.UnitConverterApp.new();
    }
  };
  (main.UnitConverterApp.new = function() {
    main.UnitConverterApp.__proto__.new.call(this);
    ;
  }).prototype = main.UnitConverterApp.prototype;
  dart.addTypeTests(main.UnitConverterApp);
  dart.addTypeCaches(main.UnitConverterApp);
  dart.setMethodSignature(main.UnitConverterApp, () => ({
    __proto__: dart.getMethods(main.UnitConverterApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.UnitConverterApp, I[0]);
  main.UnitConverterHomePage = class UnitConverterHomePage extends framework.StatefulWidget {
    createState() {
      return new main._UnitConverterHomePageState.new();
    }
    static ['_#new#tearOff']() {
      return new main.UnitConverterHomePage.new();
    }
  };
  (main.UnitConverterHomePage.new = function() {
    main.UnitConverterHomePage.__proto__.new.call(this);
    ;
  }).prototype = main.UnitConverterHomePage.prototype;
  dart.addTypeTests(main.UnitConverterHomePage);
  dart.addTypeCaches(main.UnitConverterHomePage);
  dart.setMethodSignature(main.UnitConverterHomePage, () => ({
    __proto__: dart.getMethods(main.UnitConverterHomePage.__proto__),
    createState: dart.fnType(main._UnitConverterHomePageState, [])
  }));
  dart.setLibraryUri(main.UnitConverterHomePage, I[0]);
  var _inputValue = dart.privateName(main, "_inputValue");
  var _outputValue = dart.privateName(main, "_outputValue");
  var _selectedInputUnit = dart.privateName(main, "_selectedInputUnit");
  var _selectedOutputUnit = dart.privateName(main, "_selectedOutputUnit");
  var _lengthUnits = dart.privateName(main, "_lengthUnits");
  var _weightUnits = dart.privateName(main, "_weightUnits");
  var _temperatureUnits = dart.privateName(main, "_temperatureUnits");
  var _selectedCategory = dart.privateName(main, "_selectedCategory");
  var _convert = dart.privateName(main, "_convert");
  var _getUnitsList = dart.privateName(main, "_getUnitsList");
  var _convertLength = dart.privateName(main, "_convertLength");
  var _convertWeight = dart.privateName(main, "_convertWeight");
  var _convertTemperature = dart.privateName(main, "_convertTemperature");
  main._UnitConverterHomePageState = class _UnitConverterHomePageState extends framework.State$(main.UnitConverterHomePage) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Converto")}), body: new basic.Padding.new({padding: new edge_insets.EdgeInsets.all(16), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.stretch, children: T.JSArrayOfWidget().of([new (T.DropdownButtonFormFieldOfString()).new({value: this[_selectedCategory], items: T.JSArrayOfString().of(["Length", "Weight", "Temperature"])[$map](T.DropdownMenuItemOfString(), dart.fn(category => new (T.DropdownMenuItemOfString()).new({child: new text.Text.new(category), value: category}), T.StringToDropdownMenuItemOfString()))[$toList](), onChanged: dart.fn(value => {
                  this.setState(dart.fn(() => {
                    this[_selectedCategory] = value;
                    if (this[_selectedCategory] === "Length") {
                      this[_selectedInputUnit] = this[_lengthUnits][$_get](0);
                      this[_selectedOutputUnit] = this[_lengthUnits][$_get](1);
                    } else if (this[_selectedCategory] === "Weight") {
                      this[_selectedInputUnit] = this[_weightUnits][$_get](0);
                      this[_selectedOutputUnit] = this[_weightUnits][$_get](1);
                    } else if (this[_selectedCategory] === "Temperature") {
                      this[_selectedInputUnit] = this[_temperatureUnits][$_get](0);
                      this[_selectedOutputUnit] = this[_temperatureUnits][$_get](1);
                    }
                    this[_convert]();
                  }, T.VoidTovoid()));
                }, T.StringNTovoid())}), new basic.SizedBox.new({height: 20}), new text_field.TextField.new({keyboardType: text_input.TextInputType.number, decoration: new input_decorator.InputDecoration.new({labelText: "Input Value"}), onChanged: dart.fn(value => {
                  this.setState(dart.fn(() => {
                    let t0;
                    this[_inputValue] = (t0 = core.double.tryParse(value), t0 == null ? 0 : t0);
                    this[_convert]();
                  }, T.VoidTovoid()));
                }, T.StringTovoid())}), new basic.SizedBox.new({height: 20}), new basic.Row.new({children: T.JSArrayOfWidget().of([new basic.Expanded.new({child: new (T.DropdownButtonFormFieldOfString()).new({value: this[_selectedInputUnit], items: this[_getUnitsList](), onChanged: dart.fn(value => {
                        this.setState(dart.fn(() => {
                          this[_selectedInputUnit] = dart.nullCheck(value);
                          this[_convert]();
                        }, T.VoidTovoid()));
                      }, T.StringNTovoid())})}), new basic.SizedBox.new({width: 20}), new basic.Expanded.new({child: new (T.DropdownButtonFormFieldOfString()).new({value: this[_selectedOutputUnit], items: this[_getUnitsList](), onChanged: dart.fn(value => {
                        this.setState(dart.fn(() => {
                          this[_selectedOutputUnit] = dart.nullCheck(value);
                          this[_convert]();
                        }, T.VoidTovoid()));
                      }, T.StringNTovoid())})})])}), new basic.SizedBox.new({height: 20}), new text.Text.new("Output Value: " + dart.str(this[_outputValue]))])})})});
    }
    [_getUnitsList]() {
      let unitsList = T.JSArrayOfString().of([]);
      if (this[_selectedCategory] === "Length") {
        unitsList = this[_lengthUnits];
      } else if (this[_selectedCategory] === "Weight") {
        unitsList = this[_weightUnits];
      } else if (this[_selectedCategory] === "Temperature") {
        unitsList = this[_temperatureUnits];
      }
      return unitsList[$map](T.DropdownMenuItemOfString(), dart.fn(unit => new (T.DropdownMenuItemOfString()).new({child: new text.Text.new(unit), value: unit}), T.StringToDropdownMenuItemOfString()))[$toList]();
    }
    [_convert]() {
      if (this[_selectedCategory] === "Length") {
        this[_outputValue] = this[_convertLength]();
      } else if (this[_selectedCategory] === "Weight") {
        this[_outputValue] = this[_convertWeight]();
      } else if (this[_selectedCategory] === "Temperature") {
        this[_outputValue] = this[_convertTemperature]();
      }
    }
    [_convertLength]() {
      let inputValue = this[_inputValue];
      if (this[_selectedInputUnit] === "Centimeter") {
        inputValue = inputValue / 100;
      } else if (this[_selectedInputUnit] === "Kilometer") {
        inputValue = inputValue * 1000;
      }
      let outputValue = inputValue;
      if (this[_selectedOutputUnit] === "Centimeter") {
        outputValue = outputValue * 100;
      } else if (this[_selectedOutputUnit] === "Kilometer") {
        outputValue = outputValue / 1000;
      }
      return outputValue;
    }
    [_convertWeight]() {
      let inputValue = this[_inputValue];
      if (this[_selectedInputUnit] === "Kilogram") {
        inputValue = inputValue * 1000;
      }
      let outputValue = inputValue;
      if (this[_selectedOutputUnit] === "Kilogram") {
        outputValue = outputValue / 1000;
      }
      return outputValue;
    }
    [_convertTemperature]() {
      let inputValue = this[_inputValue];
      if (this[_selectedInputUnit] === "Fahrenheit") {
        inputValue = (inputValue - 32) * 5 / 9;
      }
      let outputValue = inputValue;
      if (this[_selectedOutputUnit] === "Fahrenheit") {
        outputValue = outputValue * 9 / 5 + 32;
      }
      return outputValue;
    }
    static ['_#new#tearOff']() {
      return new main._UnitConverterHomePageState.new();
    }
  };
  (main._UnitConverterHomePageState.new = function() {
    this[_inputValue] = 0;
    this[_outputValue] = 0;
    this[_selectedInputUnit] = "";
    this[_selectedOutputUnit] = "";
    this[_lengthUnits] = T.JSArrayOfString().of(["Meter", "Centimeter", "Kilometer"]);
    this[_weightUnits] = T.JSArrayOfString().of(["Gram", "Kilogram"]);
    this[_temperatureUnits] = T.JSArrayOfString().of(["Celsius", "Fahrenheit"]);
    this[_selectedCategory] = null;
    main._UnitConverterHomePageState.__proto__.new.call(this);
    ;
  }).prototype = main._UnitConverterHomePageState.prototype;
  dart.addTypeTests(main._UnitConverterHomePageState);
  dart.addTypeCaches(main._UnitConverterHomePageState);
  dart.setMethodSignature(main._UnitConverterHomePageState, () => ({
    __proto__: dart.getMethods(main._UnitConverterHomePageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_getUnitsList]: dart.fnType(core.List$(dropdown.DropdownMenuItem$(core.String)), []),
    [_convert]: dart.fnType(dart.void, []),
    [_convertLength]: dart.fnType(core.double, []),
    [_convertWeight]: dart.fnType(core.double, []),
    [_convertTemperature]: dart.fnType(core.double, [])
  }));
  dart.setLibraryUri(main._UnitConverterHomePageState, I[0]);
  dart.setFieldSignature(main._UnitConverterHomePageState, () => ({
    __proto__: dart.getFields(main._UnitConverterHomePageState.__proto__),
    [_inputValue]: dart.fieldType(core.double),
    [_outputValue]: dart.fieldType(core.double),
    [_selectedInputUnit]: dart.fieldType(core.String),
    [_selectedOutputUnit]: dart.fieldType(core.String),
    [_lengthUnits]: dart.fieldType(core.List$(core.String)),
    [_weightUnits]: dart.fieldType(core.List$(core.String)),
    [_temperatureUnits]: dart.fieldType(core.List$(core.String)),
    [_selectedCategory]: dart.fieldType(dart.nullable(core.String))
  }));
  main.main = function main$0() {
    binding.runApp(new main.UnitConverterApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
